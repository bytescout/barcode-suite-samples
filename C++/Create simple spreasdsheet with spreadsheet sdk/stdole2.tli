// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (d133c31b).
//
// stdole2.tli
//
// Wrapper implementations for Win32 type library c:\windows\system32\stdole2.tlb
// compiler-generated file created 10/24/10 at 19:34:35 - DO NOT EDIT!

#pragma once

//
// dispinterface Font wrapper method implementations
//

inline _bstr_t Font::GetName ( ) {
    BSTR _result;
    _com_dispatch_propget(this, 0x0, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

inline void Font::PutName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x0, VT_BSTR, (BSTR)_val);
}

inline CURRENCY Font::GetSize ( ) {
    CURRENCY _result;
    _com_dispatch_propget(this, 0x2, VT_CY, (void*)&_result);
    return _result;
}

inline void Font::PutSize ( const CURRENCY & _val ) {
    _com_dispatch_propput(this, 0x2, VT_CY, &_val);
}

inline VARIANT_BOOL Font::GetBold ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_propget(this, 0x3, VT_BOOL, (void*)&_result);
    return _result;
}

inline void Font::PutBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3, VT_BOOL, _val);
}

inline VARIANT_BOOL Font::GetItalic ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_propget(this, 0x4, VT_BOOL, (void*)&_result);
    return _result;
}

inline void Font::PutItalic ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x4, VT_BOOL, _val);
}

inline VARIANT_BOOL Font::GetUnderline ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_propget(this, 0x5, VT_BOOL, (void*)&_result);
    return _result;
}

inline void Font::PutUnderline ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x5, VT_BOOL, _val);
}

inline VARIANT_BOOL Font::GetStrikethrough ( ) {
    VARIANT_BOOL _result;
    _com_dispatch_propget(this, 0x6, VT_BOOL, (void*)&_result);
    return _result;
}

inline void Font::PutStrikethrough ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x6, VT_BOOL, _val);
}

inline short Font::GetWeight ( ) {
    short _result;
    _com_dispatch_propget(this, 0x7, VT_I2, (void*)&_result);
    return _result;
}

inline void Font::PutWeight ( short _val ) {
    _com_dispatch_propput(this, 0x7, VT_I2, _val);
}

inline short Font::GetCharset ( ) {
    short _result;
    _com_dispatch_propget(this, 0x8, VT_I2, (void*)&_result);
    return _result;
}

inline void Font::PutCharset ( short _val ) {
    _com_dispatch_propput(this, 0x8, VT_I2, _val);
}

//
// dispinterface Picture wrapper method implementations
//

inline OLE_HANDLE Picture::GetHandle ( ) {
    OLE_HANDLE _result;
    _com_dispatch_propget(this, 0x0, VT_I4, (void*)&_result);
    return _result;
}

inline OLE_HANDLE Picture::GethPal ( ) {
    OLE_HANDLE _result;
    _com_dispatch_propget(this, 0x2, VT_I4, (void*)&_result);
    return _result;
}

inline void Picture::PuthPal ( OLE_HANDLE _val ) {
    _com_dispatch_propput(this, 0x2, VT_I4, _val);
}

inline short Picture::GetType ( ) {
    short _result;
    _com_dispatch_propget(this, 0x3, VT_I2, (void*)&_result);
    return _result;
}

inline OLE_XSIZE_HIMETRIC Picture::GetWidth ( ) {
    OLE_XSIZE_HIMETRIC _result;
    _com_dispatch_propget(this, 0x4, VT_I4, (void*)&_result);
    return _result;
}

inline OLE_YSIZE_HIMETRIC Picture::GetHeight ( ) {
    OLE_YSIZE_HIMETRIC _result;
    _com_dispatch_propget(this, 0x5, VT_I4, (void*)&_result);
    return _result;
}

//
// dispinterface FontEvents wrapper method implementations
//

inline HRESULT FontEvents::FontChanged ( _bstr_t PropertyName ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PropertyName);
}
